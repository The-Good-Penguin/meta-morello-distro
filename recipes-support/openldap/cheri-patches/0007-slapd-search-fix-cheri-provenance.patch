From 2d39482eea00f2afe2598ed5c469d7bffc097ebc Mon Sep 17 00:00:00 2001
From: Pawel Zalewski <pzalewski@thegoodpenguin.co.uk>
Date: Fri, 14 Jul 2023 08:00:42 +0100
Subject: [PATCH 7/7] slapd:search: fix cheri provenance

Pre-cast the integer to uintptr_t.

Signed-off-by: Pawel Zalewski <pzalewski@thegoodpenguin.co.uk>
---
 servers/slapd/back-meta/search.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

diff --git a/servers/slapd/back-meta/search.c b/servers/slapd/back-meta/search.c
index cfd2f4b..28dcbd4 100644
--- a/servers/slapd/back-meta/search.c
+++ b/servers/slapd/back-meta/search.c
@@ -868,7 +868,7 @@ getconn:;
 
 		case META_SEARCH_ERR:
 			savepriv = op->o_private;
-			op->o_private = (void *)i;
+			op->o_private = (void *)(uintptr_t)i;
 			send_ldap_result( op, rs );
 			op->o_private = savepriv;
 			rc = -1;
@@ -995,7 +995,7 @@ getconn:;
 			rc = rs->sr_err = op->o_protocol >= LDAP_VERSION3 ?
 				LDAP_ADMINLIMIT_EXCEEDED : LDAP_OTHER;
 			savepriv = op->o_private;
-			op->o_private = (void *)i;
+			op->o_private = (void *)(uintptr_t)i;
 			send_ldap_result( op, rs );
 			op->o_private = savepriv;
 			goto finish;
@@ -1008,7 +1008,7 @@ getconn:;
 			doabandon = 1;
 			rc = rs->sr_err = LDAP_TIMELIMIT_EXCEEDED;
 			savepriv = op->o_private;
-			op->o_private = (void *)i;
+			op->o_private = (void *)(uintptr_t)i;
 			send_ldap_result( op, rs );
 			op->o_private = savepriv;
 			goto finish;
@@ -1047,7 +1047,7 @@ getconn:;
 					candidates[ i ].sr_err = rs->sr_err;
 					if ( META_BACK_ONERR_STOP( mi ) ) {
 						savepriv = op->o_private;
-						op->o_private = (void *)i;
+						op->o_private = (void *)(uintptr_t)i;
 						send_ldap_result( op, rs );
 						op->o_private = savepriv;
 						goto finish;
@@ -1076,7 +1076,7 @@ getconn:;
 						candidates[ i ].sr_err = rs->sr_err;
 						if ( META_BACK_ONERR_STOP( mi ) ) {
 							savepriv = op->o_private;
-							op->o_private = (void *)i;
+							op->o_private = (void *)(uintptr_t)i;
 							send_ldap_result( op, rs );
 							op->o_private = savepriv;
 							goto finish;
@@ -1161,7 +1161,7 @@ really_bad:;
 							candidates[ i ].sr_err = rs->sr_err;
 							if ( META_BACK_ONERR_STOP( mi ) ) {
 								savepriv = op->o_private;
-								op->o_private = (void *)i;
+								op->o_private = (void *)(uintptr_t)i;
 								send_ldap_result( op, rs );
 								op->o_private = savepriv;
 								goto finish;
@@ -1189,7 +1189,7 @@ really_bad:;
 					candidates[ i ].sr_err = rs->sr_err;
 					if ( META_BACK_ONERR_STOP( mi ) ) {
 						savepriv = op->o_private;
-						op->o_private = (void *)i;
+						op->o_private = (void *)(uintptr_t)i;
 						send_ldap_result( op, rs );
 						op->o_private = savepriv;
 						goto finish;
@@ -1236,13 +1236,13 @@ really_bad:;
 
 					e = ldap_first_entry( msc->msc_ld, msg );
 					savepriv = op->o_private;
-					op->o_private = (void *)i;
+					op->o_private = (void *)(uintptr_t)i;
 					rs->sr_err = meta_send_entry( op, rs, mc, i, e );
 
 					switch ( rs->sr_err ) {
 					case LDAP_SIZELIMIT_EXCEEDED:
 						savepriv = op->o_private;
-						op->o_private = (void *)i;
+						op->o_private = (void *)(uintptr_t)i;
 						send_ldap_result( op, rs );
 						op->o_private = savepriv;
 						rs->sr_err = LDAP_SUCCESS;
@@ -1311,7 +1311,7 @@ really_bad:;
 					if ( rs->sr_ref != NULL && !BER_BVISNULL( &rs->sr_ref[ 0 ] ) ) {
 						/* ignore return value by now */
 						savepriv = op->o_private;
-						op->o_private = (void *)i;
+						op->o_private = (void *)(uintptr_t)i;
 						( void )send_search_reference( op, rs );
 						op->o_private = savepriv;
 	
@@ -1580,7 +1580,7 @@ err_pr:;
 										candidates[ i ].sr_err = rs->sr_err;
 										if ( META_BACK_ONERR_STOP( mi ) ) {
 											savepriv = op->o_private;
-											op->o_private = (void *)i;
+											op->o_private = (void *)(uintptr_t)i;
 											send_ldap_result( op, rs );
 											op->o_private = savepriv;
 											ldap_controls_free( ctrls );
@@ -1629,7 +1629,7 @@ err_pr:;
 got_err:
 							save_text = rs->sr_text;
 							savepriv = op->o_private;
-							op->o_private = (void *)i;
+							op->o_private = (void *)(uintptr_t)i;
 							rs->sr_text = candidates[ i ].sr_text;
 							send_ldap_result( op, rs );
 							rs->sr_text = save_text;
@@ -1682,7 +1682,7 @@ got_err:
 						candidates[ i ].sr_err = rs->sr_err;
 						if ( META_BACK_ONERR_STOP( mi ) ) {
 							savepriv = op->o_private;
-							op->o_private = (void *)i;
+							op->o_private = (void *)(uintptr_t)i;
 							send_ldap_result( op, rs );
 							op->o_private = savepriv;
 							ldap_msgfree( res );
@@ -1806,7 +1806,7 @@ free_message:;
 	 * FIXME: only the last one gets caught!
 	 */
 	savepriv = op->o_private;
-	op->o_private = (void *)(long)mi->mi_ntargets;
+	op->o_private = (void *)(uintptr_t)mi->mi_ntargets;
 	if ( candidate_match > 0 ) {
 		struct berval	pmatched = BER_BVNULL;
 
@@ -1844,7 +1844,7 @@ free_message:;
 							op->o_tmpfree( pmatched.bv_val, op->o_tmpmemctx );
 						}
 						pmatched = pbv;
-						op->o_private = (void *)i;
+						op->o_private = (void *)(uintptr_t)i;
 
 					} else {
 						op->o_tmpfree( pbv.bv_val, op->o_tmpmemctx );
-- 
2.34.1

